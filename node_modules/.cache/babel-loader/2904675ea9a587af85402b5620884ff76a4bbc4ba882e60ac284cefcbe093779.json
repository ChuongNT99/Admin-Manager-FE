{"ast":null,"code":"/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { ChevronDown, ChevronUp } from \"@blueprintjs/icons\";\nimport { Classes, Elevation, Utils } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { Card } from \"../card/card\";\nimport { Collapse } from \"../collapse/collapse\";\nimport { H6 } from \"../html/html\";\nimport { Icon } from \"../icon/icon\";\n/**\n * Section component.\n *\n * @see https://blueprintjs.com/docs/#core/components/section\n */\nexport var Section = React.forwardRef(function (props, ref) {\n  var _a, _b;\n  var _c;\n  var children = props.children,\n    className = props.className,\n    collapseProps = props.collapseProps,\n    collapsible = props.collapsible,\n    compact = props.compact,\n    elevation = props.elevation,\n    icon = props.icon,\n    rightElement = props.rightElement,\n    subtitle = props.subtitle,\n    title = props.title,\n    htmlProps = __rest(props, [\"children\", \"className\", \"collapseProps\", \"collapsible\", \"compact\", \"elevation\", \"icon\", \"rightElement\", \"subtitle\", \"title\"]);\n  // Determine whether to use controlled or uncontrolled state.\n  var isControlled = (collapseProps === null || collapseProps === void 0 ? void 0 : collapseProps.isOpen) != null;\n  // The initial useState value is negated in order to conform to the `isCollapsed` expectation.\n  var _d = React.useState(!((_c = collapseProps === null || collapseProps === void 0 ? void 0 : collapseProps.defaultIsOpen) !== null && _c !== void 0 ? _c : true)),\n    isCollapsedUncontrolled = _d[0],\n    setIsCollapsed = _d[1];\n  var isCollapsed = isControlled ? !(collapseProps === null || collapseProps === void 0 ? void 0 : collapseProps.isOpen) : isCollapsedUncontrolled;\n  var toggleIsCollapsed = React.useCallback(function () {\n    var _a;\n    if (isControlled) {\n      (_a = collapseProps === null || collapseProps === void 0 ? void 0 : collapseProps.onToggle) === null || _a === void 0 ? void 0 : _a.call(collapseProps);\n    } else {\n      setIsCollapsed(!isCollapsed);\n    }\n  }, [collapseProps, isCollapsed, isControlled]);\n  var isHeaderLeftContainerVisible = title != null || icon != null || subtitle != null;\n  var isHeaderRightContainerVisible = rightElement != null || collapsible;\n  return React.createElement(Card, __assign({\n    className: classNames(className, Classes.SECTION, (_a = {}, _a[Classes.COMPACT] = compact, _a[Classes.SECTION_COLLAPSED] = collapsible && isCollapsed || Utils.isReactNodeEmpty(children), _a)),\n    elevation: elevation,\n    ref: ref\n  }, htmlProps), title && React.createElement(\"div\", {\n    role: collapsible ? \"button\" : undefined,\n    \"aria-pressed\": collapsible ? isCollapsed : undefined,\n    className: classNames(Classes.SECTION_HEADER, (_b = {}, _b[Classes.INTERACTIVE] = collapsible, _b)),\n    onClick: collapsible != null ? toggleIsCollapsed : undefined\n  }, isHeaderLeftContainerVisible && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: Classes.SECTION_HEADER_LEFT\n  }, icon && React.createElement(Icon, {\n    icon: icon,\n    \"aria-hidden\": true,\n    tabIndex: -1,\n    className: Classes.TEXT_MUTED\n  }), React.createElement(\"div\", null, React.createElement(H6, {\n    className: Classes.SECTION_HEADER_TITLE\n  }, title), subtitle && React.createElement(\"div\", {\n    className: classNames(Classes.TEXT_MUTED, Classes.SECTION_HEADER_SUB_TITLE)\n  }, subtitle)))), isHeaderRightContainerVisible && React.createElement(\"div\", {\n    className: Classes.SECTION_HEADER_RIGHT\n  }, rightElement, collapsible && (isCollapsed ? React.createElement(ChevronDown, {\n    className: Classes.TEXT_MUTED\n  }) : React.createElement(ChevronUp, {\n    className: Classes.TEXT_MUTED\n  })))), collapsible ? React.createElement(Collapse, __assign({}, collapseProps, {\n    isOpen: !isCollapsed\n  }), children) : children);\n});\nSection.defaultProps = {\n  compact: false,\n  elevation: Elevation.ZERO\n};\nSection.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Section\");","map":{"version":3,"names":["classNames","React","ChevronDown","ChevronUp","Classes","Elevation","Utils","DISPLAYNAME_PREFIX","Card","Collapse","H6","Icon","Section","forwardRef","props","ref","children","className","collapseProps","collapsible","compact","elevation","icon","rightElement","subtitle","title","htmlProps","__rest","isControlled","isOpen","_d","useState","_c","defaultIsOpen","isCollapsedUncontrolled","setIsCollapsed","isCollapsed","toggleIsCollapsed","useCallback","_a","onToggle","call","isHeaderLeftContainerVisible","isHeaderRightContainerVisible","createElement","__assign","SECTION","COMPACT","SECTION_COLLAPSED","isReactNodeEmpty","role","undefined","SECTION_HEADER","_b","INTERACTIVE","onClick","Fragment","SECTION_HEADER_LEFT","tabIndex","TEXT_MUTED","SECTION_HEADER_TITLE","SECTION_HEADER_SUB_TITLE","SECTION_HEADER_RIGHT","defaultProps","ZERO","displayName","concat"],"sources":["D:\\app\\node_modules\\@blueprintjs\\core\\src\\components\\section\\section.tsx"],"sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { ChevronDown, ChevronUp, IconName } from \"@blueprintjs/icons\";\n\nimport { Classes, Elevation, Utils } from \"../../common\";\nimport { DISPLAYNAME_PREFIX, HTMLDivProps, MaybeElement, Props } from \"../../common/props\";\nimport { Card } from \"../card/card\";\nimport { Collapse, CollapseProps } from \"../collapse/collapse\";\nimport { H6 } from \"../html/html\";\nimport { Icon } from \"../icon/icon\";\n\n/**\n * Subset of {@link Elevation} options which are visually supported by the {@link Section} component.\n *\n * Note that an elevation greater than 1 creates too much visual clutter/noise in the UI, especially when\n * multiple Sections are shown on a single page.\n */\nexport type SectionElevation = typeof Elevation.ZERO | typeof Elevation.ONE;\n\nexport interface SectionCollapseProps\n    extends Pick<CollapseProps, \"className\" | \"isOpen\" | \"keepChildrenMounted\" | \"transitionDuration\"> {\n    /**\n     * Whether the component is initially open or closed.\n     *\n     * This prop has no effect if `collapsible={false}` or the component is in controlled mode,\n     * i.e. when `isOpen` is **not** `undefined`.\n     *\n     * @default true\n     */\n    defaultIsOpen?: boolean;\n\n    /**\n     * Whether the component is open or closed.\n     *\n     * Passing a boolean value to `isOpen` will enabled controlled mode for the component.\n     */\n    isOpen?: boolean;\n\n    /**\n     * Callback invoked in controlled mode when the collapse toggle element is clicked.\n     */\n    onToggle?: () => void;\n}\n\nexport interface SectionProps extends Props, Omit<HTMLDivProps, \"title\">, React.RefAttributes<HTMLDivElement> {\n    /**\n     * Whether this section's contents should be collapsible.\n     *\n     * @default false\n     */\n    collapsible?: boolean;\n\n    /**\n     * Subset of props to forward to the underlying {@link Collapse} component, with the addition of a\n     * `defaultIsOpen` option which sets the default open state of the component when in uncontrolled mode.\n     */\n    collapseProps?: SectionCollapseProps;\n\n    /**\n     * Whether this section should use compact styles.\n     *\n     * @default false\n     */\n    compact?: boolean;\n\n    /**\n     * Visual elevation of this container element.\n     *\n     * @default Elevation.ZERO\n     */\n    elevation?: SectionElevation;\n\n    /**\n     * Name of a Blueprint UI icon (or an icon element) to render in the section's header.\n     * Note that the header will only be rendered if `title` is provided.\n     */\n    icon?: IconName | MaybeElement;\n\n    /**\n     * Element to render on the right side of the section header.\n     * Note that the header will only be rendered if `title` is provided.\n     */\n    rightElement?: JSX.Element;\n\n    /**\n     * Sub-title of the section.\n     * Note that the header will only be rendered if `title` is provided.\n     */\n    subtitle?: JSX.Element | string;\n\n    /**\n     * Title of the section.\n     * Note that the header will only be rendered if `title` is provided.\n     */\n    title?: JSX.Element | string;\n}\n\n/**\n * Section component.\n *\n * @see https://blueprintjs.com/docs/#core/components/section\n */\nexport const Section: React.FC<SectionProps> = React.forwardRef((props, ref) => {\n    const {\n        children,\n        className,\n        collapseProps,\n        collapsible,\n        compact,\n        elevation,\n        icon,\n        rightElement,\n        subtitle,\n        title,\n        ...htmlProps\n    } = props;\n    // Determine whether to use controlled or uncontrolled state.\n    const isControlled = collapseProps?.isOpen != null;\n\n    // The initial useState value is negated in order to conform to the `isCollapsed` expectation.\n    const [isCollapsedUncontrolled, setIsCollapsed] = React.useState<boolean>(!(collapseProps?.defaultIsOpen ?? true));\n\n    const isCollapsed = isControlled ? !collapseProps?.isOpen : isCollapsedUncontrolled;\n\n    const toggleIsCollapsed = React.useCallback(() => {\n        if (isControlled) {\n            collapseProps?.onToggle?.();\n        } else {\n            setIsCollapsed(!isCollapsed);\n        }\n    }, [collapseProps, isCollapsed, isControlled]);\n\n    const isHeaderLeftContainerVisible = title != null || icon != null || subtitle != null;\n    const isHeaderRightContainerVisible = rightElement != null || collapsible;\n\n    return (\n        <Card\n            className={classNames(className, Classes.SECTION, {\n                [Classes.COMPACT]: compact,\n                [Classes.SECTION_COLLAPSED]: (collapsible && isCollapsed) || Utils.isReactNodeEmpty(children),\n            })}\n            elevation={elevation}\n            ref={ref}\n            {...htmlProps}\n        >\n            {title && (\n                <div\n                    role={collapsible ? \"button\" : undefined}\n                    aria-pressed={collapsible ? isCollapsed : undefined}\n                    className={classNames(Classes.SECTION_HEADER, {\n                        [Classes.INTERACTIVE]: collapsible,\n                    })}\n                    onClick={collapsible != null ? toggleIsCollapsed : undefined}\n                >\n                    {isHeaderLeftContainerVisible && (\n                        <>\n                            <div className={Classes.SECTION_HEADER_LEFT}>\n                                {icon && (\n                                    <Icon icon={icon} aria-hidden={true} tabIndex={-1} className={Classes.TEXT_MUTED} />\n                                )}\n\n                                <div>\n                                    <H6 className={Classes.SECTION_HEADER_TITLE}>{title}</H6>\n                                    {subtitle && (\n                                        <div\n                                            className={classNames(Classes.TEXT_MUTED, Classes.SECTION_HEADER_SUB_TITLE)}\n                                        >\n                                            {subtitle}\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                        </>\n                    )}\n\n                    {isHeaderRightContainerVisible && (\n                        <div className={Classes.SECTION_HEADER_RIGHT}>\n                            {rightElement}\n                            {collapsible &&\n                                (isCollapsed ? (\n                                    <ChevronDown className={Classes.TEXT_MUTED} />\n                                ) : (\n                                    <ChevronUp className={Classes.TEXT_MUTED} />\n                                ))}\n                        </div>\n                    )}\n                </div>\n            )}\n\n            {collapsible ? (\n                <Collapse {...collapseProps} isOpen={!isCollapsed}>\n                    {children}\n                </Collapse>\n            ) : (\n                children\n            )}\n        </Card>\n    );\n});\nSection.defaultProps = {\n    compact: false,\n    elevation: Elevation.ZERO,\n};\nSection.displayName = `${DISPLAYNAME_PREFIX}.Section`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}